{{- $releaseName := .Release.Name -}}
{{- $deploymentName := include "deployment.fullname" . }}
{{- $configmapName := include "configmap.fullname" . }}
{{- $chartName := include "overseer.name" . -}}
{{- $metrics := (include "common.metrics.merged" .) | fromYaml }}
{{- $cloudProviderImagePullSecretName := include "overseer.cloudProviderImagePullSecretName" . -}}
{{- $cloudProviderDockerRegistryUrl := include "overseer.cloudProviderDockerRegistryUrl" . -}}
{{- $imageTag := include "overseer.tag" . -}}
{{- $storage := (include "common.storage.merged" .) | fromYaml }}

{{ $gpkgPath := (printf "%s/%s" $storage.fs.internalPvc.outputPath $storage.fs.internalPvc.gpkgSubPath) }}

{{- if .Values.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $deploymentName }}
  labels:
    app: {{ $chartName }}
    component: {{ $chartName }}
    environment: {{ include "overseer.environment" . }}
    release: {{ $releaseName }}
    {{- include "overseer.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      app: {{ $chartName }}
      release: {{ $releaseName }}
      run: {{ $releaseName }}-{{ $chartName }}
      {{- include "overseer.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: {{ $chartName }}
        release: {{ $releaseName }}
        run: {{ $releaseName }}-{{ $chartName }}
        {{- include "overseer.selectorLabels" . | nindent 8 }}
      annotations:
        {{- if .Values.resetOnConfigChange }}
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- end }}
        {{- if $metrics.enabled }}
        prometheus.io/port: {{ .Values.env.targetPort | quote }}
        prometheus.io/scrape: {{ $metrics.prometheus.scrape | quote }}
        {{- end }}
        {{- if .Values.podAnnotations }}
        {{- toYaml .Values.podAnnotations | nindent 8 }}
        {{- end }}
    spec:
      {{- if $cloudProviderImagePullSecretName }}
      imagePullSecrets:
        - name: {{ $cloudProviderImagePullSecretName | quote }}
      {{- end }}      
      containers:
        - name: {{ $releaseName }}-{{ $chartName }}-deployment
          {{- with .Values.image }}
          image: {{ $cloudProviderDockerRegistryUrl }}{{ .repository }}:{{ $imageTag }}
          imagePullPolicy: {{ .pullPolicy | default "IfNotPresent" }}
          {{- end }}
          {{- if .Values.command }}
          command: 
            {{- toYaml .Values.command | nindent 12 }}
          {{- end }}
          {{- if .Values.args }}
          args: 
            {{- toYaml .Values.args | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- if $storage.fs.internalPvc.enabled }}
            - name: internal-storage
              mountPath: {{ $storage.fs.internalPvc.outputPath }}
            {{- end }}
            {{- if .Values.global.ca.secretName }}
            - mountPath: {{ printf "%s/%s" .Values.global.ca.path .Values.global.ca.key | quote }}
              name: root-ca
              subPath: {{ quote .Values.global.ca.key }}
            {{- end }}
            {{- if .Values.extraVolumeMounts }}
              {{- toYaml .Values.extraVolumeMounts | nindent 12 }}
            {{- end }}
          env:
            - name: SERVER_PORT
              value: {{ .Values.env.targetPort | quote }}
            - name: GPKGS_LOCATION
              value: {{ $gpkgPath }}
            {{- if .Values.global.ca.secretName }}
            - name: REQUESTS_CA_BUNDLE
              value: {{ printf "%s/%s" .Values.global.ca.path .Values.global.ca.key | quote }}
            - name: NODE_EXTRA_CA_CERTS
              value: {{ printf "%s/%s" .Values.global.ca.path .Values.global.ca.key | quote }}
            {{- end }}
            {{- if .Values.extraEnvVars }}
            {{- toYaml .Values.extraEnvVars | nindent 12 }}
            {{- end }}
            {{- if eq (upper $storage.gpkgProvider) "S3" }}
            - name: S3_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ $storage.s3.secretName }}
                  key: accessKeyId
            - name: S3_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ $storage.s3.secretName }}
                  key: secretAccessKey
            {{- end }}            
          envFrom:
            - configMapRef:
                name: {{ $configmapName }}
          ports:
            - name: http
              containerPort: {{ .Values.env.targetPort }}
              protocol: {{ .Values.env.protocol }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: {{ .Values.env.targetPort }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: {{ .Values.env.targetPort }}
          {{- end }}        
          {{- if .Values.resources.enabled }}
          resources:
            {{- toYaml .Values.resources.value | nindent 12 }}
          {{- end }}
        {{- if .Values.sidecars }}
        {{- tpl (toYaml .Values.sidecars) . | nindent 8 }}
        {{- end }}
      volumes:
        {{- if $storage.fs.internalPvc.enabled }}  
        - name: internal-storage
          persistentVolumeClaim:
            claimName: {{ $storage.fs.internalPvc.name }}
        {{- end }}          
        - name: nginx-config
          configMap:
            name: 'nginx-extra-configmap'      
        {{- if .Values.global.ca.secretName }}
        - name: root-ca
          secret:
            secretName: {{ .Values.global.ca.secretName }}
        {{- end }}
        {{- if .Values.extraVolumes }}
          {{- tpl (toYaml .Values.extraVolumes) . | nindent 8 }}
        {{- end }}   
{{- end }}
